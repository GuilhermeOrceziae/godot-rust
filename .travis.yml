language: rust

matrix:

  allow_failures:
   - rust: nightly
  fast_finish: true

  include:
    - name: cargo fmt
      os: linux
      rust: stable
      env: CI_STAGE_CARGO_FMT=yes
      before_script:
       - rustup component add rustfmt

    - name: cargo test (stable)
      os: linux
      rust: stable
      env: CI_STAGE_CARGO_TEST=yes

    - name: cargo build --release (stable)
      os: linux
      rust: stable
      env: CI_STAGE_BUILD_RELEASE=yes

    - name: Godot test (stable)
      os: linux
      rust: stable
      env: CI_STAGE_GODOT_TEST=yes RUST_BACKTRACE=1 GODOT_VER=3.2 GODOT_REL=stable
      before_script:
        - 'wget "https://downloads.tuxfamily.org/godotengine/$GODOT_VER/Godot_v${GODOT_VER}-${GODOT_REL}_linux_headless.64.zip" -O /tmp/godot.zip'
        - unzip /tmp/godot.zip -d godot_bin
        - export PATH=$PATH:$PWD/godot_bin/

    - name: cargo test (nightly)
      os: linux
      rust: nightly
      env: CI_STAGE_CARGO_TEST=yes

    - name: cargo build --release (nightly)
      os: linux
      rust: nightly
      env: CI_STAGE_BUILD_RELEASE=yes

    - name: Godot test (nightly)
      os: linux
      rust: nightly
      env: CI_STAGE_GODOT_TEST=yes RUST_BACKTRACE=1 GODOT_VER=3.2 GODOT_REL=stable
      before_script:
        - 'wget "https://downloads.tuxfamily.org/godotengine/$GODOT_VER/Godot_v${GODOT_VER}-${GODOT_REL}_linux_headless.64.zip" -O /tmp/godot.zip'
        - unzip /tmp/godot.zip -d godot_bin
        - export PATH=$PATH:$PWD/godot_bin/

    - name: cargo test (stable, windows)
      os: windows
      rust: stable
      env: CI_STAGE_CARGO_TEST=yes

    - name: cargo build --release (stable, windows)
      os: windows
      rust: stable
      env: CI_STAGE_BUILD_RELEASE=yes

    - name: cargo test (nightly, windows)
      os: windows
      rust: nightly
      env: CI_STAGE_CARGO_TEST=yes

    - name: cargo build --release (nightly, windows)
      os: windows
      rust: nightly
      env: CI_STAGE_BUILD_RELEASE=yes

script:
  - if [[ "$CI_STAGE_CARGO_FMT" == "yes" ]]; then
      cargo fmt --all -- --check;
    fi

  - if [[ "$CI_STAGE_CARGO_TEST" == "yes" ]]; then
      cargo test --all --all-features;
    fi

  - if [[ "$CI_STAGE_BUILD_RELEASE" == "yes" ]]; then
      cargo build --release;
    fi

  - if [[ "$CI_STAGE_GODOT_TEST" == "yes" ]]; then
      cd test;
      cargo build;
      mkdir ./project/lib;
      cp ../target/debug/libgdnative_test.so ./project/lib/;
      "Godot_v${GODOT_VER}-${GODOT_REL}_linux_headless.64" --path ./project/;
    fi
